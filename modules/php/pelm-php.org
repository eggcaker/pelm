#+TITLE: PHP
#+OPTIONS: toc:nil num:nil ^:nil
#+AUTHOR:    Caker
#+EMAIL:     eggcaker@gmail.com
#+DATE:      2011-02-12 Sat
#+DESCRIPTION: configurations of Jabber
#+KEYWORDS: Jabber
#+LANGUAGE:  en
#+EXPORT_SELECT_TAGS: export
#+EXPORT_EXCLUDE_TAGS: noexport
#+LINK_HOME: http://webcaker/pelm/modules/php.html

* Requires flymake and php mode
#+BEGIN_SRC emacs-lisp
  (require 'flymake)
  (require 'php-mode)
  (setq auto-mode-alist
        (append
         '(("\\.php$" . php-mode))  auto-mode-alist  ))
#+END_SRC

* Functions 

** flymake-php-init()
#+srcname: flymake-php-init()
#+BEGIN_SRC emacs-lisp

  (defun flymake-php-init ()
    "Use php to check the syntax of the current file."
    (let* ((temp (flymake-init-create-temp-buffer-copy 'flymake-create-temp-inplace))
      (local (file-relative-name temp (file-name-directory buffer-file-name))))
      (list "php" (list "-f" local "-l"))))

  (add-to-list 'flymake-err-line-patterns
   '("\\(Parse\\|Fatal\\) error: +\\(.*?\\) in \\(.*?\\) on line \\([0-9]+\\)$" 3 4 nil 2))
  (add-to-list 'flymake-allowed-file-name-masks '("\\.php$" flymake-php-init))

#+END_SRC 

** run-php()

#+SRCNAME run-php()
#+BEGIN_SRC emacs-lisp

  (defun run-php()
    "Run a PHP script "
    (interactive)
    (compile (concat "php \"" (buffer-file-name) "\"")))
#+END_SRC

* Hooks and Keys
#+BEGIN_SRC emacs-lisp  
  (add-hook 'php-mode-hook (lambda () (flymake-mode 1)))
  (define-key php-mode-map "\C-cep" 'flymake-goto-prev-error)
  (define-key php-mode-map "\C-cen" 'flymake-goto-next-error)
  (define-key php-mode-map "\C-csm" 'flymake-display-err-menu-for-current-line)
  (define-key php-mode-map "\C-cr" 'run-php)
#+END_SRC  
