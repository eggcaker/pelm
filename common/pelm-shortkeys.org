#+TITLE: Shortkeys
#+OPTIONS: toc:nil num:nil ^:nil

#+BEGIN_SRC emacs-lisp

;; keyboard remark
(global-set-key "\M-h" 'delete-backward-char)
(global-set-key "\C-cG" 'end-of-buffer)
(global-set-key "\C-cg" 'beginning-of-buffer)
(global-set-key "\C-c{" 'beginning-of-defun)
(global-set-key "\C-c}" 'end-of-defun)


;;(windmove-default-keybindings)
(global-set-key (kbd "\e <left>") 'windmove-left)
(global-set-key (kbd "\e <down>") 'windmove-down)
(global-set-key (kbd "\e <up>") 'windmove-up)
(global-set-key (kbd "\e <right>") 'windmove-right)


;; enabled the org-mode quickly 
(global-set-key (kbd "\C-co") 'org-mode)


(global-set-key [(control ?.)] 'ska-point-to-register)
(global-set-key [(control ?\,)] 'ska-jump-to-register)
(defun ska-point-to-register()
  "Store cursorposition _fast_ in a register.
  Use ska-jump-to-register to jump back to the stored
  position."
  (interactive)
  (setq zmacs-region-stays t)
  (point-to-register 8))

(defun ska-jump-to-register()
  "Switches between current cursorposition and position
  that was stored with ska-point-to-register."
  (interactive)
  (setq zmacs-region-stays t)
  (let ((tmp (point-marker)))
    (jump-to-register 8)
    (set-register 8 tmp)))

#+END_SRC

